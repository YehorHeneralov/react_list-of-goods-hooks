{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","setSortType","isReversed","setIsReversed","preparedGoods","goods","copyGoods","ALPHABETICALLY","sort","good1","good2","localeCompare","SORT_BY_LENGTH","length","reverse","sortedGoodByType","isButtonsActive","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,gCAAAA,E,+BAAAA,M,KAkCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAiB,IAAjD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAjCR,SAA0BC,EACxBL,EACAE,GACA,IAAMI,EAAS,YAAOD,GAEtB,OAAQL,GACN,KAAKJ,EAASW,eACZD,EAAUE,MAAK,SAACC,EAAOC,GAAR,OACbD,EAAME,cAAcD,MAEtB,MAEF,KAAKd,EAASgB,eACZN,EAAUE,MAAK,SAACC,EAAOC,GAAR,OACbD,EAAMI,OAASH,EAAMG,UAY3B,OAJIX,GACFI,EAAUQ,UAGLR,EAOeS,CAAiBlB,EAAiBG,EAAUE,GAO5Dc,EAAkBhB,GAAYE,EAEpC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMjB,EAAYL,EAASW,iBACpCY,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAaJ,EAASW,iBAJtC,iCAUA,wBACEW,QAAS,kBAAMjB,EAAYL,EAASgB,iBACpCO,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAaJ,EAASgB,iBAJtC,4BAUA,wBACEM,QAAS,kBAAMf,GAAeD,IAC9BiB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAalB,IAJjB,qBAUCc,GACC,wBACEE,QA1CO,WACfjB,EAAY,IACZE,GAAc,IAyCNgB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGb,EAAciB,KAAI,SAAAC,GAAI,OACrB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cChHrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62ea55a7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const ALPHABETICALLY = 'alphabetically';\n// const SORT_BY_LENGTH = 'sortByLength';\n\nenum SortType {\n  ALPHABETICALLY = 'alphabetically',\n  SORT_BY_LENGTH = 'sortByLength',\n}\n\nfunction sortedGoodByType(goods: string[],\n  sortType: string,\n  isReversed: boolean): string[] {\n  const copyGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABETICALLY:\n      copyGoods.sort((good1, good2) => (\n        good1.localeCompare(good2)\n      ));\n      break;\n\n    case SortType.SORT_BY_LENGTH:\n      copyGoods.sort((good1, good2) => (\n        good1.length - good2.length\n      ));\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState<string>('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedGoods = sortedGoodByType(goodsFromServer, sortType, isReversed);\n\n  const resetAll = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  const isButtonsActive = sortType || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SortType.SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {isButtonsActive && (\n          <button\n            onClick={resetAll}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {preparedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}